// ООП в программировании

// Принцип наследования - один из самых основных принципов наследования

// Позволяет иметь базовый объект и создавать на его основе другие дочерние объекты, содержащие что-то новое и наследующие у своего родительского объекта свойства, методы и имеющие к ним доступ
// Можно расширять свои программы и создавая одни объекты на базе других можно максимально использовать наследование в своих целях

let admin = {
    ryles: 777
}

let user = {
    name: "Ivan",
    age: 20,
    __proto__: admin
}

// Свойство proto указывает на другой объект, который родительский у данного
// В этом свойстве есть набор разных методов
// По умолчанию наш объект наследуется от стандартного объекта, который называется Object() и имеет дополнительные методы и доступ к ним

user.toString()
user.valueOf()

// мы эти методы не создавали, но благодаря прототипу, можно им пользоваться
// указывая метод в дочернем элементе, мы указываем его в качестве прототипа для нашего объекта user
// все дочерние объекты могут иметь доступ к его свойствам и методам

// Рассмотрим случай, когда нам нужно создавать объекты по типу user, но они должны быть разными и их нужно в больщом количестве

function User(name, age) { // Функция-конструктор - имя начинается с большой буквы, для отличий - так принято
    this.name = name;
    this.age = age;
    this.myInfo = function() { 
    console.log("Меня зовут " +this.name+ ", мне " +this.age+ " лет") 
    this.__proto__ = admin;
}}

// C помощью конструктора можно создавать сразу несколько однотипных объектов

let u1 = new User("Petr", 21)
let u2 = new User("Sergei", 29)
let u3 = new User("Alex", 25)

// Создание метода для объекта admin1

let admin1 = {
    ryles: 777,
    isAdmin() { // метод - это обычная функция, внутри какого-то объекта и она позволяет делать что-то с его свойствами
        console.log("Я админ "+this.name+" мои права "+this.ryles)
    }
}

// Класс - шаблон кода, позволяющий создавать легко объекты

class User {

constructor(name, age) {
    admin = true;
    this.name = name;
    this.age = age;
}
myInfo() { 
    console.log("Меня зовут " +this.name+ ", мне " +this.age+ " лет"); 
}
}