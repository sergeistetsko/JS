// Возможности ES 6
const a1 = 5; // нельзя изменить

// Оператор расширения

function sum(a,b) {
    return a+b
}
let date = [4,8];
sum(...date); // Оператор расширения подставляет первое значение массива в a, второе значение в b

// Деструктивное присваивание

let [a,b,c,d] = [1,2,3,4]; // Можно использовать отдельные переменные, а не массив с ними

// Стрелочные функции - анонимные функции, сохраняют контекст

let sum = (a,b,c) => {
    return a+b+c
}

// Создание двоичных чисел

let v = 0b011;  // 0b перед самим двоичным числом

// Работа в восьмеричной системе исчисления

let n = 0o10; // 0o  перед самим числом

// Целое число

Number.isInteger(18.0); // Выводится булево значение true, так как после запятой ничего нет

// NaN - значение для проверки, что это не число

let g = NaN;
Number.isNaN(b); // Для проверки этого значения 

// Дополнительные готовые гиперболические методы

Math.sinh(0);
Math.cosh(0);
Math.tanh(0);
Math.asinh(0); // Обратные
Math.acos(0);
Math.atanh(0);
Math.hypot(2,2,1); // Теорема Пифагора

// Алгебраические методы

Math.log2(16); // логарифм по основанию 2
Math.log10(1000); // логарифм по основанию 10
Math.log1p(0); // то же, что и log(1+value)
Math.expm1(0); // функция обратная Math.log1p()
Math.cbrt(0); // корень кубический

// Метод, определяющий знак числа

Math.sign(16); // выводит результат в виде 1 0 -1

// Метод, повторяющий значение строки n раз

let m = "Str".repeat(3);

// Метод, позволяющий найти одну строку, внутри другой

"Str str1".includes("str1");
