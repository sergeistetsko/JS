// ООП -  способ проектирования и написания кода, когда все важные части программы являются объектами.

// Простой объект - состоит из свойств, которые представляют собой пары - ключ-значение.

// let dog = {
//     name: "Оладушек",
//     legs: 4,
//     isAwesome: true
// }

// Доступ к значениям внутри объекта

// dog.name;

// Задание нового свойства

// dog.age = 6;

// Добавление к объектам новых методов

// Функция, которая хранится в свойстве объекта называется - метод

// Как создавать собственные методы - способ через точечную нотацию

// dog.bark = function () {
//     console.log("Гав-гав! Меня зовут " + this.name + "!");
// };

// dog.bark();

// Ключевое слово this
// Через this.name получаем значение, сохранённое в свойстве name, этого объекта
// Подробнее
// Используется в теле метода, чтобы обратиться к объекту, для которого этот метод вызывается

// Используем один метод с разными объектами

// let speak = function () {
//     console.log(this.sound + "! Меня зовут " + this.name + "!");
// };

// let cat = {
//     sound: "Мяу",
//     name: "Варежка",
//     speak: speak
// };

// cat.speak();

// //

// let pig = {
//     sound: "Хрю",
//     name: "Чарли",
//     speak: speak    
// };

// let horse = {
//     sound: "И-го-го",
//     name: "Мэри",
//     speak: speak    
// };

// pig.speak();
// horse.speak();

// Конструкторы объектов позволяют задавать общие методы и свойства более удобным способом

// Создание объектов при помощи конструктора - функции, которая создаёт объекты, давая им набор заранее определённых свойств и методов.
// При помощи конструктора можно создавать любое количество одинаковых объектов.

// Устройство конструктора (синтаксис)

// Вызывая конструктор создаётся объект, с добавлением ему нужных свойств
// Ключевое слово new имя конструктора (с большой буквы, для отличия от обычных функций) и скобки

// Создание конструктора

let Car = function (x, y) {
    this.x = x;
    this.y = y;
};

// Рисуем машины

var drawCar = function (car) {
    var carHtml = '<img src="1.jpg">';
    var carElement = $(carHtml);

    carElement.css({
        position: "absolute",
        left: car.x,
        top: car.y
    });

    $("body").append(carElement);
};
